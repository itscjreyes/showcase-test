{"version":3,"sources":["Components/Banner/banner.component.jsx","Components/Filters/filter.industry.component.jsx","Components/Filters/filter.type.component.jsx","Components/Filters Wrapper/filters-wrapper.component.jsx","Components/Cards/cards.component.jsx","Components/Listing/listing.component.jsx","Components/More Posts/more-posts.component.jsx","Components/Footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Banner","className","href","src","alt","IndustryFilter","industry","handleChange","htmlFor","value","onChange","name","TypeFilter","type","FiltersWrapper","handleTypeChange","handleIndustryChange","Card","key","title","description","image","content","link","cardStyle","backgroundImage","target","rel","style","Listing","props","data","map","card","i","rendered","acf","MorePosts","handleClick","onClick","Footer","App","state","isLoaded","page","bind","fetchPosts","event","this","setState","axios","get","then","res","prevState","catch","err","console","log","filteredData","slice","filter","item","includes","length","count","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.216aae25.chunk.js","sourcesContent":["import React from 'react';\n\nimport './banner.styles.scss';\n\nexport const Banner = () => {\n    return (\n        <section className=\"banner\">\n            <div className=\"logo-wrapper\">\n                <a href=\"https://crowdriff.com\" className=\"logo\"><img src=\"https://crowdriffstg.wpengine.com/wp-content/uploads/crowdriff-logo-all-white.svg\" alt=\"CrowdRiff\"/></a>\n            </div>\n            <div className=\"container\">\n                <div className=\"content-wrapper\">\n                    <h1>Travel & Tourism Industry Response Community</h1>\n                    <p>On this page, you can find a curated stream of content to equip you with the insights and knowledge on what other travel & tourism brands are doing to effectively respond to this current pandemic.</p>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react';\nimport './filters.styles.scss';\n\nexport const IndustryFilter = ({industry, handleChange}) => (\n    <div className=\"fiter-select\">\n        <label htmlFor=\"industry-filter\">Industry</label>\n        <select value={industry} onChange={handleChange} name=\"industry-filter\">\n            <option value=\"\">All</option>\n            <option value=\"Destinations\">Destinations</option>\n            <option value=\"Attractions & Museums\">Attractions & Museums</option>\n        </select>\n    </div>\n)","import React from 'react';\nimport './filters.styles.scss';\n\nexport const TypeFilter = ({type, handleChange}) => (\n    <div className=\"fiter-select\">\n        <label htmlFor=\"type-filter\">Type</label>\n        <select value={type} onChange={handleChange} name=\"type-filter\">\n            <option value=\"\">All</option>\n            <option value=\"Example\">Example</option>\n            <option value=\"Blog\">Blog</option>\n            <option value=\"Webinar\">Webinar</option>\n        </select>\n    </div>\n)","import React from 'react';\nimport { IndustryFilter } from '../Filters/filter.industry.component';\nimport { TypeFilter } from '../Filters/filter.type.component';\n\nimport './filters-wrapper.styles.scss';\n\nexport const FiltersWrapper = ({type, industry, handleTypeChange, handleIndustryChange}) => {\n    return (\n        <div className=\"filters\">\n          <div className=\"container\">\n            <TypeFilter\n              value={type}\n              handleChange={handleTypeChange}\n            />\n            <IndustryFilter\n              value={industry}\n              handleChange={handleIndustryChange}\n            />\n          </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport './cards.styles.scss';\n\nfunction Card({key, title, description, image, content, link}) {\n    \n    const cardStyle = {\n        backgroundImage: 'url(' + image + ')',\n    };\n    return (\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"card\" key={key}>\n            <div className=\"img-wrapper\" style={cardStyle}>\n            </div>\n            <div className=\"content-wrapper\">\n                <div className=\"title-description\">\n                    <h3>{title}</h3>\n                    <p>{description}</p>\n                </div>\n                <div className=\"date-tag\">\n                    <span className=\"date\">March 30, 2020</span>\n                    <span className=\"tag\">{content}</span>\n                </div>\n            </div>\n        </a>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../Cards/cards.component';\n\nimport './listing.styles.scss';\n\nexport const Listing = props => {\n\treturn (\n\t\t<section className=\"listing-wrapper\">\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tprops.data.map((card, i) => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\ttitle={card.title.rendered}\n\t\t\t\t\t\tdescription={card.acf.description}\n\t\t\t\t\t\timage={card.acf.image}\n\t\t\t\t\t\tcontent={card.acf.content}\n\t\t\t\t\t\tlink={card.acf.link}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t}\n\t\t\t</div>\n\t\t</section>\n\t)\n}","import React from 'react';\n\nimport './more-posts.styles.scss';\n\nexport const MorePosts = ({handleClick}) => {\n    return (\n        <div className=\"btn-wrapper\">\n          <button className=\"more-posts-btn\" onClick={handleClick}>Load More Posts</button>\n        </div>\n    )\n}","import React from 'react';\n\nimport './footer.styles.scss';\n\nexport const Footer = () => {\n    return (\n        <footer>\n            <div className=\"container\">\n                <a href=\"https://crowdriff.com\" className=\"logo\"><img src=\"https://crowdriffstg.wpengine.com/wp-content/uploads/crowdriff-logo-sm.png\" alt=\"CrowdRiff\"/></a>\n                <p>&copy;2020 CrowdRiff Inc.</p>\n            </div>\n        </footer>\n    )\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Banner } from './Components/Banner/banner.component';\nimport { FiltersWrapper } from './Components/Filters Wrapper/filters-wrapper.component';\nimport { Listing } from './Components/Listing/listing.component';\nimport { MorePosts } from './Components/More Posts/more-posts.component';\nimport { Footer } from './Components/Footer/footer.component';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      type: '',\n      industry: '',\n      isLoaded: false,\n      page: 1\n    }\n\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleIndustryChange = this.handleIndustryChange.bind(this);\n    this.fetchPosts = this.fetchPosts.bind(this);\n  }\n\n  handleTypeChange(event) {\n    this.setState({type: event.target.value});\n  }\n\n  handleIndustryChange(event) {\n    this.setState({\n      industry: event.target.value,\n      page: 1\n    });\n\n    this.fetchPosts();\n  }\n\n  fetchPosts() {\n    axios.get(`https://crowdriffstg.wpengine.com/wp-json/wp/v2/showcase?per_page=6&page=${this.state.page}`)\n      .then(res => this.setState((prevState) => ({\n          data: res.data,\n          isLoaded: true,\n          page: prevState.page + 1\n      })))\n      .catch(err => console.log(err))\n  }\n\n  componentDidMount() {\n    this.fetchPosts();\n\t}\n\n  render() {\n    const { data, type, industry, isLoaded } = this.state;\n\n    let filteredData = data.slice();\n    if (type) {\n      filteredData = filteredData.filter(item => item.acf.content.includes(type))\n    }\n    if (industry) {\n      filteredData = filteredData.filter(item => item.acf.industry.includes(industry))\n    }\n\n    console.log(this.state)\n\n    return (\n      <div className=\"App\">\n        <Banner />\n        <FiltersWrapper\n          type={type}\n          industry={industry}\n          handleTypeChange={this.handleTypeChange}\n          handleIndustryChange={this.handleIndustryChange}\n        />\n        { filteredData.length > 0 &&\n          <Listing \n            data={filteredData}\n            count={filteredData.length}\n          />\n        }\n        { filteredData.length == 0 && isLoaded &&\n          <section className=\"no-results\">\n            <div className=\"container\">\n              <h2>Sorry, there are no matches. Please try again.</h2>\n            </div>\n          </section>\n        }\n        <MorePosts\n          handleClick={this.fetchPosts}\n        />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}